name: ReleaseNewVersion

on: [push]

jobs:
  readPomAndLastRelease:
    runs-on: ubuntu-latest
    outputs:
      rawPomVersion: ${{steps.getXml.outputs.info}}
      pomVersion: 'v${{steps.getXml.outputs.info}}'
      lastReleaseId: ${{steps.lastRelease.outputs.release}}
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Get XML Info
      id: getXml
      uses: mavrosxristoforos/get-xml-info@1.1.1
      with:
        xml-file: 'pom.xml'
        xpath: "//*[local-name()='project']/*[local-name()='version']"
    - id: lastRelease
      uses: pozetroninc/github-action-get-latest-release@master
      with:
        repository: Christian-2003/VATE
    
  build:
    needs: readPomAndLastRelease
    if: needs.readPomAndLastRelease.outputs.pomVersion != needs.readPomAndLastRelease.outputs.lastReleaseId
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - run: echo 'VATE Version ${{needs.readPomAndLastRelease.outputs.pomVersion}} and ${{needs.readPomAndLastRelease.outputs.lastReleaseId}}'
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file
    - name: Build with Maven
      run: mvn package --file pom.xml
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: needs.readPomAndLastRelease.outputs.pomVersion
        release_name: 'VATE Version ${{ needs.readPomAndLastRelease.outputs.rawPomVersion }}'
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: './VATE-${{needs.readPomAndLastRelease.outputs.rawPomVersion}}.jar'
        asset_name: 'VATE-${{needs.readPomAndLastRelease.outputs.rawPomVersion}}.jar'
        asset_content_type: application/java-archive
